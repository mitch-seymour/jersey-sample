plugins {
    id 'application'

    // https://plugins.gradle.org/plugin/com.github.sherter.google-java-format
    id 'com.github.sherter.google-java-format' version '0.8'

    // used for containerizing the app
    id 'com.google.cloud.tools.jib' version '2.1.0'

    // for downloading a Prometheus JMX Exporter JAR that can run as a Java agent
  id 'de.undercouch.download' version '4.1.1'
}

ext {
  assertJVersion = '3.15.0'
  guavaVersion = '30.0-jre'
  jettyVersion = '9.4.6.v20170531'
  junitVersion = '5.6.2'
  logbackVersion = '1.2.3'
  prometheusJmxExporterVersion='0.14.0'
  slf4jVersion = '1.7.3'
}

repositories {
    mavenCentral()
}

application {
  // run the DSL example by default
  mainClassName = 'com.mitchseymour.Main'
}

group = 'jetty-sample'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

dependencies {
    implementation "org.eclipse.jetty:jetty-server:${jettyVersion}"
    implementation "org.eclipse.jetty:jetty-servlet:${jettyVersion}"

    // logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    // test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testImplementation "com.google.guava:guava:${guavaVersion}"
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

/**
 * The below task will download the JAR needed for running the Prometheus JMX
 * exporter as a Java agent.
 */
task downloadPrometheusExporter(type: Download) {
    src "https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${prometheusJmxExporterVersion}/jmx_prometheus_javaagent-${prometheusJmxExporterVersion}.jar"
    dest new File('files', 'jmx_prometheus_javaagent.jar')
}

// code formatting
tasks.withType(JavaCompile).configureEach { javaCompile ->
  javaCompile.dependsOn 'googleJavaFormat'
  options.encoding = 'UTF-8'
}

// containerizing
jib {
  to {
    image = 'mitchseymour/jetty-sample:0.1.0'
  }
  extraDirectories.paths = ['files']
  container {
    jvmFlags = [
      /** 
       * The port we expose JMX metrics on should match the port in the JMX
       * url that is defined in jmx_prometheus_exporter.yaml
       */
      '-Dcom.sun.management.jmxremote.port=5555',
      '-Dcom.sun.management.jmxremote.local.only=true',
      '-Dcom.sun.management.jmxremote.authenticate=false',
      '-Dcom.sun.management.jmxremote.ssl=false',
      '-javaagent:./jmx_prometheus_javaagent.jar=9010:jmx_prometheus_exporter.yaml',
    ]
    mainClass = application.mainClassName
    ports = ['8080', '9010']
    format = 'OCI'
  }
}

tasks.jibDockerBuild.dependsOn  tasks.downloadPrometheusExporter
